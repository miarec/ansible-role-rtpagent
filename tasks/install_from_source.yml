---
- name: Install source dependencies for rtpengine
  package:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items: "{{ rtpengine_source_dependencies }}"

- name: Create rtpengine Install directory
  file:
    path: "{{ rtpengine_install_dir }}"
    state: directory
    owner: "{{ rtpengine_user }}"
    group: "{{ rtpengine_group }}"
    mode: "0755"

- name: Clone rtpengine GitHub repository
  git:
    repo: https://github.com/sipwise/rtpengine.git
    dest: "{{ rtpengine_download_dir }}/rtpengine-{{ rtpengine_version }}"
    version: "mr{{ rtpengine_version }}"
    recursive: true
    clone: true

- name: Compile rtpengine daemon
  shell: umask 0022 && make -j{{ ansible_processor_cores | default(1) + 1 }} DESTDIR={{ rtpengine_install_dir }}
  environment:
    with_transcoding: no       # yamllint disable-line rule:truthy
    with_iptables_option: no   # yamllint disable-line rule:truthy
  args:
    chdir: "{{ rtpengine_download_dir }}/rtpengine-{{ rtpengine_version }}/daemon"
    creates: "{{ rtpengine_download_dir }}/rtpengine-{{ rtpengine_version }}/daemon/rtpengine"

- name: Install rtpengine daemon
  shell: umask 0022 && make install DESTDIR={{ rtpengine_install_dir }}
  environment:
    with_transcoding: no       # yamllint disable-line rule:truthy
    with_iptables_option: no   # yamllint disable-line rule:truthy
  args:
    chdir: "{{ rtpengine_download_dir }}/rtpengine-{{ rtpengine_version }}/daemon"
    creates: "{{ rtpengine_install_dir }}/bin/rtpengine"
  notify: restart rtpengine

- name: Get kernel version
  # noqa command-instead-of-shell
  shell: uname -r
  changed_when: false
  register: kernel_version
  when: rtpengine_use_kernel_module|bool

- name: Compile rtpengine kernel-module
  shell: umask 0022 && make -j{{ ansible_processor_cores | default(1) + 1 }}
  args:
    chdir: "{{ rtpengine_download_dir }}/rtpengine-{{ rtpengine_version }}/kernel-module"
    creates: "{{ rtpengine_download_dir }}/rtpengine-{{ rtpengine_version }}/kernel-module/xt_RTPENGINE.ko"
  when: rtpengine_use_kernel_module|bool

- name: Install rtpengine kernel-module
  shell: umask 0022 && make install
  args:
    chdir: "{{ rtpengine_download_dir }}/rtpengine-{{ rtpengine_version }}/kernel-module"
    creates: "/lib/modules/{{ kernel_version.stdout }}/updates/xt_RTPENGINE.ko"
  when: rtpengine_use_kernel_module|bool
  notify: restart rtpengine

- name: Register rtpengine binaries
  command: ls -1 {{ rtpengine_install_dir }}/usr/bin
  register: _rtpengine_binaries
  changed_when: false

- name: Add rtpengine binaries to alternatives
  alternatives:
    name: "{{ item }}"
    path: "{{ rtpengine_install_dir }}/usr/bin/{{ item }}"
    link: "/usr/bin/{{ item }}"
  with_items: "{{ _rtpengine_binaries.stdout_lines }}"

# Cleanup Source Files
- name: Clean up the source files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ rtpengine_download_dir }}/rtpengine-{{ rtpengine_version }}"
  when: rtpengine_cleanup_downloads|bool
  become: true
